package com.team4.boulderBuild.ui.gyms

import androidx.lifecycle.LiveData
import androidx.lifecycle.MutableLiveData
import androidx.lifecycle.ViewModel
import androidx.lifecycle.ViewModelProvider
import com.team4.data.repository.GymsRepository
import com.team4.domain.Gym

class GymListViewModel(private val gymsRepository: GymsRepository) : ViewModel() {

//    sealed class UiModel {
//        object Loading : UiModel()
//        class Content(val gyms: List<Gym>) : UiModel()
//        class Navigation(val gym: Gym) : UiModel()
//    }

    private val _gyms = MutableLiveData<List<Gym>>()
    val  gyms: LiveData<List<Gym>>
        get() = _gyms

//    private val _model = MutableLiveData<UiModel>()
//    val model: LiveData<UiModel>
//        get() {
//            if (_model.value == null) {
//                refresh()
//            }
//            return _model
//        }

    init {}

//    private fun refresh() {
//        MainScope().launch {
//            _model.value = UiModel.Loading
//            _model.value = UiModel.Content(gymsRepository.getAllGyms())
//        }
//    }

    fun onGymClicked(gym: Gym) {
//        _model.value = UiModel.Navigation(gym)
    }

    override fun onCleared() {
        super.onCleared()
    }

}

@Suppress("UNCHECKED_CAST")
class GymListViewModelFactory(private val gymsRepository: GymsRepository): ViewModelProvider.Factory {
    override fun <T : ViewModel?> create(modelClass: Class<T>): T = GymListViewModel(gymsRepository) as T
}